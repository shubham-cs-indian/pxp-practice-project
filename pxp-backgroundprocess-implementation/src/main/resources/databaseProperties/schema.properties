#Add value for reference within the {} only
schema.article=article
schema.asset=asset
schema.common=common

# Add the table name 
article.tablename = article
article.attribute.tablename = article_attributes
article.tags.tablename = article_tags
article.language.tablename = article_lang

# Add the query below for each instance
article.create=INSERT INTO {schema.article}.{article.tablename}(\
	id, basetype, types, taxonomyids, selectedtaxonomyids, organizationid,\
    physicalcatalogid, logicalcatalogid, systemid, endpointid, originalinstanceid, defaultassetinstanceid,\
    cloneof, versionof, klassinstanceid, parentid, path, variants, attributevariants,\
    languageinstances, languagecodes, creationlanguage, ruleviolation, messages, context, summary, partnersources, relationships,\
    naturerelationships, isembedded, savecomment, versionid, versiontimestamp, createdby, createdon, lastmodifiedby, lastmodified)\
	VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );
	
article.create.attributes = INSERT INTO {schema.article}.{article.attribute.tablename}(\
	id, klassinstanceid, code, language, conflictingvalues, isconflictresolved, isunique, basetype, attributeid,notification, \
	isshouldviolated, context, variantinstanceid, value, valueasexpression, valueasnumber, valueashtml,\
    originalinstanceid, tags, ismandatoryviolated, duplicatestatus, versionid, \
	versiontimestamp, createdby, createdon, lastmodifiedby, lastmodified)\
	VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);	

article.create.tags = INSERT INTO {schema.article}.{article.tags.tablename}(\
	id, klassinstanceid, conflictingvalues, ismatchandmerge, tagid, basetype, \
	notification, isconflictresolved, isshouldviolated, ismandatoryviolated, variantinstanceid, contextinstanceid,\
	tagvalues, versionid, versiontimestamp, createdby, createdon, lastmodifiedby, lastmodified)\
	VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? );
	
article.create.lang = INSERT INTO {schema.article}.{article.language.tablename}(\
	id, langid, name)\
	VALUES (?, ?, ?);
	
attributes.save.value		= UPDATE {schema.article}.{article.attribute.tablename} \
                      		  SET \
                      		  "value"= ?,  \
                      		  "valueasnumber" = ?, \
                      		  "valueashtml" = ?, \
                      		  "lastmodifiedby"= ?, \
                      		  "lastmodified"= ? \
                      		  WHERE \
                      		  ("id"= ? OR "attributeid" = ? ) \
                      		  AND "klassinstanceid"= ? ;

tags.save.tagValues   		= UPDATE {schema.article}.{article.tags.tablename} \
							  SET "tagvalues"= ?,"lastmodified"= ?, "lastmodifiedby"= ? WHERE "id"= ? AND "klassinstanceid"= ? ;

article.save.name 			= UPDATE {schema.article}.{article.language.tablename} \
							  SET "name"= ? WHERE "id"= ? AND "langid"= ? ;

article.save.lastModified 	= UPDATE {schema.article}.{article.tablename} \
							  SET "lastmodified"= ? , "lastmodifiedby"= ? WHERE "id"= ?;
								
article.get					= SELECT * FROM {schema.article}.{article.tablename} \
							  JOIN {schema.article}.{article.attribute.tablename} \
							  ON {schema.article}.{article.tablename}.id = {schema.article}.{article.attribute.tablename}.klassinstanceid \
							  JOIN {schema.article}.{article.tags.tablename} \
                              ON {schema.article}.{article.tablename}.id = {schema.article}.{article.tags.tablename}.klassinstanceid \
							  WHERE  {schema.article}.{article.tablename}.id = ? ;
attributes.get 				= SELECT * FROM {schema.article}.{article.attribute.tablename} WHERE "klassinstanceid" = ? ;
tags.get					= SELECT * FROM {schema.article}.{article.tags.tablename} WHERE "klassinstanceid" = ? ;							
tags.get.tagsIds			= SELECT * FROM {schema.article}.{article.tags.tablename} WHERE "id" IN 

tags.get.tagBy.id			= SELECT * FROM {schema.article}.{article.tags.tablename} WHERE "id" = ?
				  							  
article.get.all			    = SELECT * FROM {schema.article}.{article.tablename} \
							  JOIN {schema.article}.{article.attribute.tablename} \
                              ON {schema.article}.{article.tablename}.id = {schema.article}.{article.attribute.tablename}.klassinstanceid \
							  WHERE  {schema.article}.{article.attribute.tablename}.attributeid = ? \
							  ORDER BY {schema.article}.{article.tablename}.lastmodified DESC LIMIT ? OFFSET ?;
							  
attributes.get.all 			= SELECT * FROM {schema.article}.{article.attribute.tablename} WHERE "klassinstanceid" IN
tags.get.all 				= SELECT * FROM {schema.article}.{article.tags.tablename} WHERE "klassinstanceid" IN

article.get.total.count 	= SELECT COUNT("id") FROM {schema.article}.{article.tablename} ;
article.get.itemBy.name		= SELECT ar.* FROM {schema.article}.{article.tablename} ar \
							  INNER JOIN {schema.article}.{article.language.tablename} lan \
							  ON lan.id = ar.id WHERE lan."name" LIKE  ? ;

article.delete.byids       = DELETE FROM {schema.article}.{article.tablename} WHERE id IN 
asset.delete.byids         = DELETE FROM {schema.asset}.{article.tablename} WHERE id IN
article.get.types		   = SELECT types, selectedtaxonomyids, languagecodes FROM {schema.article}.{article.tablename} WHERE id = ?;

tags.get.tagValues         = SELECT id, tagId, tagValues FROM {schema.article}.{article.tags.tablename} WHERE klassinstanceid = ? AND id IN 