#
#   BG-PROCESS property file
#   to be installed under <working directory>/bgprocess-props/bgprocess.properties
#

# define the database vendor to be used
dbVendor = postgres
#dbVendor = oracle

# define the default PXP user who executes the background process
bgpUserID = 10
bgpUserName = Admin

# Log level for the component
log.level = DEBUG
log.backups = 10
log.kbSize = 1024
log.filePath = ./src/test/bgprocess.log

# HTTP REST Server parameters
httpServer.port = 5080
httpServer.maxThreads = 5
httpServer.minThreads = 1
httpServer.idleTimeout = 2000
# The download directory is where log files are downloaded 
# for convenience, this is by default the HTML static content directory
httpServer.downloadDir = ./html

# The SWIFT server for image upload
asset.connectionString = http://103.112.4.187:13756
asset.account=dev
asset.user=dev
asset.passkey=pass@123

#The PXP server for callback communication
pxpServerURL = http://localhost:5080/REST
callbackURI = /admin/callback?job=${job}&status=${status}

# PGSQL11 parameters
postgres.connectionString = jdbc:postgresql://localhost:5432/pxp
postgres.dba = pxp
postgres.dbaPassword = pxp123
postgres.poolMinIdle = 5
postgres.poolMaxIdle = 10
postgres.preparedStatement = 200

# ORACLE12C parameters
oracle.connectionString = jdbc:oracle:thin:@localhost:1521/pxp
oracle.dba = pxp
oracle.dbaPassword = pxp123
oracle.poolMinIdle = 5
oracle.poolMaxIdle = 10
oracle.preparedStatement = 200

# ORIENTDB parameters
orientdb.connectionString = http://localhost:2480
orientdb.user = admin
orientdb.password = admin

# Background process scheduler properties
# Poll interval in sec. when the dispatcher will wake up and evaluate pending/paused tasks
# It is strongly recommended to keep this value between 10 and 50 seconds according to the number of BGP to proceed.
bgp.scheduler.pollInterval = 30

# Background process parameters
# scheduled process: declare here the list of scheduled services with a symbolic name
bgp.scheduler.services = DATA_MAINTENANCE, PROPERTY_DELETION, ORPHANS_CLEANING, \
        BULK_OPERATION, DATA_IMPORT, DATA_EXPORT, DATA_QUALITY, DASHBOARD, QUEUE_MAINTENANCE, TAG_VALUE_DELETE, PROPERTY_DELETE, CONTEXTUAL_DATA_TRANSFER_TASK,CLASSIFICATION_DATA_TRANSFER
# QUEUE MAINTENANCE: 
bgp.QUEUE_MAINTENANCE.classPath = com.cs.core.bgprocess.core.services.purging.QueueMaintenance
bgp.QUEUE_MAINTENANCE.nbThread = 1
bgp.QUEUE_MAINTENANCE.maxDeletionLines = 1000
bgp.QUEUE_MAINTENANCE.maxHours = 48

#ORPHANS_CLEANING : 
bgp.ORPHANS_CLEANING.classPath = com.cs.core.bgprocess.services.purging.OrphansCleaning
bgp.ORPHANS_CLEANING.nbThread = 1
bgp.ORPHANS_CLEANING.batchSize = 1000

# TAG_VALUE_DELETE
bgp.TAG_VALUE_DELETE.classPath = com.cs.core.bgprocess.services.config.TagValueDelete
bgp.TAG_VALUE_DELETE.nbThread = 1
bgp.TAG_VALUE_DELETE.batchSize = 1

# PROPERTY_DELETE
bgp.PROPERTY_DELETE.classPath = com.cs.core.bgprocess.services.config.PropertyDelete
bgp.PROPERTY_DELETE.nbThread = 1
bgp.PROPERTY_DELETE.batchSize = 1

#CONTEXTUAL_DATA_TRANSFER_TASK
bgp.CONTEXTUAL_DATA_TRANSFER_TASK.classPath = com.cs.core.bgprocess.services.datatransfer.ContextualDataTransferTask
bgp.CONTEXTUAL_DATA_TRANSFER_TASK.nbThread = 1
bgp.CONTEXTUAL_DATA_TRANSFER_TASK.batchSize = 1

#CLASSIFICATION_DATA_TRANSFER_TASK
CLASSIFICATION_DATA_TRANSFER.classPath = com.cs.core.bgprocess.services.datatransfer.ClassificationDataTransfer
CLASSIFICATION_DATA_TRANSFER.classPath = 1
CLASSIFICATION_DATA_TRANSFER.classPath = 1
