<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
						http://java.sun.com/xml/ns/javaee/web-app_3_1.xsd"
						xmlns:sec="http://www.springframework.org/schema/security">

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<listener>
		<listener-class>com.cs.core.listener.ApplicationHttpSessionListner</listener-class>
	</listener>
	
	<listener>
    	<listener-class>org.springframework.security.web.session.HttpSessionEventPublisher </listener-class>
  	</listener>
	

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
		  /WEB-INF/applicationContext.xml
		  /WEB-INF/securityContext.xml
		</param-value>
	</context-param>
	
	<!-- Processes application requests -->
	<servlet>
		<servlet-name>test</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>test</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<session-config>
	        <session-timeout>-1</session-timeout>
	        <cookie-config>
	        	<max-age>864000</max-age>
				<secure>false</secure>
	        </cookie-config>
	</session-config>
	
	<!--filter>
		<filter-name>GzipFilter</filter-name>
		<filter-class>org.eclipse.jetty.servlets.GzipFilter</filter-class>
		<init-param>
			<param-name>mimeTypes</param-name>
			<param-value>text/html,text/plain,text/xml,application/xhtml+xml,text/css,application/javascript,image/svg+xml,application/x-javascript,application/json</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>GzipFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping-->
	
	 <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
        <param-name>encoding</param-name>
        <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
        <param-name>forceEncoding</param-name>
        <param-value>true</param-value>
    </init-param>
</filter>

<filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
</filter-mapping>

<!-- Rest Easy for Camunda REST API's -->
<filter>
    <filter-name>Resteasy</filter-name>
    <filter-class>
        org.jboss.resteasy.plugins.server.servlet.FilterDispatcher
    </filter-class>
     <init-param>
        <param-name>javax.ws.rs.Application</param-name>
        <param-value>com.cs.core.config.strategy.cammunda.broadcast.RestProcessEngineDeployment</param-value>
    </init-param>
  </filter>

  <filter-mapping>
      <filter-name>Resteasy</filter-name>
      <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  	<!-- Adding the filters for the spring security purpose -->
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- Adding the RequestContextListener for the spring security purpose otherwise 
		request is not processing -->
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	
</web-app>