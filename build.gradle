buildscript {
  repositories {
    jcenter()
    mavenCentral()
  }
}

def ruleSetFile = file("full-pmd-ruleset.xml")

subprojects{
  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'idea'
  apply plugin: 'pmd'
  pmd {
    pmdTest.enabled=false
    ruleSetFiles(ruleSetFile)
    toolVersion="6.7.0"
  }
  sourceCompatibility = 11
}

task installGitHooks(type: Copy) {
  def osFolder = ""
  osFolder = "$rootProject.rootDir/githooks/mac"
  def dirName = '.git/hooks'
  file ( dirName ).list().each{
    f -> delete "${dirName}/${f}"
  }
  from "$osFolder/commit-msg", "$osFolder/post-checkout", "$osFolder/post-merge","$osFolder/pre-push"
  into '.git/hooks'

}

task installMessageTemplate(type:Exec) {
  workingDir "$rootProject.rootDir"
  commandLine 'git', 'config', 'commit.template' ,'.gitmessage'
}

task clearDB {
  dependsOn(":pxp-orientdb-implementation:clearOrient")
  dependsOn(":pxp-rdbms-implementation:rdbms-renew")
  dependsOn(":elastic-sync:clearElastic")
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput

task reinitDB {
  dependsOn(":pxp-orientdb-implementation:clearOrient")
  dependsOn(":pxp-rdbms-implementation:rdbms-renew")
  dependsOn(":elastic-sync:clearElastic")
  doLast {
		print "=============DATA INITIALIZING....============="
        def body = []
        def req = new URL('http://localhost:8092/pxp-ui/datainitialization').openConnection()
        req.setRequestMethod("POST")
        req.setRequestProperty("Content-Type", "application/json; charset=UTF-8")
        req.setDoOutput(true)
        req.getOutputStream().write(JsonOutput.toJson(body).getBytes("UTF-8"))
        logger.quiet "Status code: ${req.getResponseCode()}" 
        def resp = new JsonSlurper().parseText(req.getInputStream().getText())
        logger.quiet "Is Initialized: ${resp}"
    }
}

